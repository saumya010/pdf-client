{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","name","receiptId","price1","price2","handleChange","target","value","setState","createAndDownloadPdf","axios","post","then","get","responseType","res","pdfBlob","Blob","data","type","saveAs","className","placeholder","onChange","this","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAKMA,E,4MACLC,MAAQ,CACPC,KAAM,GACNC,UAAW,EACXC,OAAQ,EACRC,OAAQ,G,EAGTC,aAAe,oBAAEC,OAASC,EAAX,EAAWA,MAAON,EAAlB,EAAkBA,KAAlB,OAA6B,EAAKO,SAAL,eAAgBP,EAAOM,K,EAEnEE,qBAAuB,WACnBC,IAAMC,KAAK,cAAe,EAAKX,OAC5BY,MAAK,kBAAMF,IAAMG,IAAI,YAAa,CAAEC,aAAc,YAClDF,MAAK,SAACG,GACL,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAIG,MAAO,CAAEC,KAAM,oBAE7CC,iBAAOJ,EAAS,kB,4CAIxB,WACC,OACC,sBAAKK,UAAU,MAAf,UACC,uBAAOF,KAAK,OAAOlB,KAAK,OAAOqB,YAAY,OAAOC,SAAUC,KAAKnB,eACjE,uBAAOc,KAAK,SAASlB,KAAK,YAAYqB,YAAY,aAAaC,SAAUC,KAAKnB,eAC9E,uBAAOc,KAAK,SAASlB,KAAK,SAASqB,YAAY,UAAUC,SAAUC,KAAKnB,eACxE,uBAAOc,KAAK,SAASlB,KAAK,SAASqB,YAAY,UAAUC,SAAUC,KAAKnB,eACxE,wBAAQoB,QAASD,KAAKf,qBAAtB,iC,GA3BciB,aAmCH3B,IC5BA4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8de825f7.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport {saveAs} from 'file-saver'\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tname: '',\n\t\treceiptId: 0,\n\t\tprice1: 0,\n\t\tprice2: 0\n\t}\n\n\thandleChange = ({target: {value, name}}) => this.setState({[name]: value})\n\n\tcreateAndDownloadPdf = () => {\n\t    axios.post('/create-pdf', this.state)\n\t      .then(() => axios.get('fetch-pdf', { responseType: 'blob' }))\n\t      .then((res) => {\n\t        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\n\n\t        saveAs(pdfBlob, 'newPdf.pdf');\n\t    })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.handleChange} />\n\t\t\t\t<input type=\"number\" name=\"receiptId\" placeholder=\"Receipt ID\" onChange={this.handleChange} />\n\t\t\t\t<input type=\"number\" name=\"price1\" placeholder=\"Price 1\" onChange={this.handleChange} />\n\t\t\t\t<input type=\"number\" name=\"price2\" placeholder=\"Price 2\" onChange={this.handleChange} />\n\t\t\t\t<button onClick={this.createAndDownloadPdf}>\n\t\t\t\t\tDownload PDF\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}